# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
    
- script: |
    # Find the WAR file generated by Maven
    war_file=$(find $(System.DefaultWorkingDirectory) -name '*.war' -print -quit)
    echo "Found WAR file: $war_file"
    # Continue with Veracode scan only if a WAR file is found
    if [ -n "$war_file" ]; then
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f "$war_file" || true
    else
      echo "No WAR file found. Skipping Veracode scan."
    fi
  displayName: 'Find WAR file and perform Veracode scan (if applicable)'
  continueOnError: true
  
- publish: $(System.DefaultWorkingDirectory)/results.json
  artifact: VeracodeBaseline
